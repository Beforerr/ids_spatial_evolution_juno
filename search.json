[
  {
    "objectID": "presentations/AGU23_poster.html#main-findings",
    "href": "presentations/AGU23_poster.html#main-findings",
    "title": "Solar wind discontinuities spatial evolution and energetic ion scattering",
    "section": "Main findings",
    "text": "Main findings\n\nSolar wind discontinuities evolve in space with occurrence rate decreasing, thickness increasing and current density decreasing with distance from the Sun. And they are probably generated locally beyond 1 AU.\nBackground sheared magnetic field plays an important role in determining the efficiency of ion pitch angle scattering, and characterize three ion populations: transient, trapped, regular.",
    "crumbs": [
      "Home",
      "Presentations",
      "Solar wind discontinuities spatial evolution and energetic ion scattering"
    ]
  },
  {
    "objectID": "presentations/AGU23_poster.html#introduction-motivation",
    "href": "presentations/AGU23_poster.html#introduction-motivation",
    "title": "Solar wind discontinuities spatial evolution and energetic ion scattering",
    "section": "Introduction & Motivation",
    "text": "Introduction & Motivation\n‘Discontinuities’ are discontinuous spatial changes in plasma parameters/characteristics and magnetic fields (colburn1966?).\n\n\n(söding2001?) studied the radial distribution of discontinuities in the solar wind.\n\n\nJoint observations of JUNO & ARTEMIS & Other missions really provides a unique opportunity!!!",
    "crumbs": [
      "Home",
      "Presentations",
      "Solar wind discontinuities spatial evolution and energetic ion scattering"
    ]
  },
  {
    "objectID": "presentations/AGU23_poster.html#method",
    "href": "presentations/AGU23_poster.html#method",
    "title": "Solar wind discontinuities spatial evolution and energetic ion scattering",
    "section": "Method",
    "text": "Method\n\nWe use (liu2022a?) method to identify IDs, which has better compatibility for the IDs with minor field changes.\nThen the minimum variance analysis is applied to each ID event to obtain the boundary normal (LMN) coordinate and extract IDs’ features.\nHamiltonian model is applied for investigation of ion dynamics in the solar wind discontinuity configuration.\n\nThe most generalized form of dimensionless hamiltonian equation for ions in force-free rotational magnetic discontinuities configuration is\n\\[\nH=\\frac{1}{2}\\left(\\frac{1}{6} \\alpha^2 c_2 z^3-c_1 z+p_x\\right)^2+\\frac{p_z^2}{2}+\\frac{1}{2}\\left(\\kappa x-\\frac{\\alpha z^2}{2}\\right)^2\n\\]\nWith \\(B_l^2+B_m^2=\\text { const }\\), we have\n\\[\nH=\\frac{1}{2}\\left(\\frac{\\alpha^2 z^3}{6 \\sqrt{\\kappa_m^2+1}}-z \\sqrt{\\kappa_m^2+1}+p_x\\right)^2+\\frac{p_z^2}{2}+\\frac{1}{2}\\left(\\kappa_n x-\\frac{\\alpha z^2}{2}\\right)^2\n\\]\nThe system has three parameters\n\\[\n\\kappa_n=\\frac{B_n}{B_{l, \\max }}\n\\quad\n\\kappa_m=\\frac{B_{m, 0}}{B_{l, \\max }}\n\\quad\n\\alpha=\\frac{l_0}{L}=\\frac{\\text { gyro radius }}{\\text { system length }}\n\\]",
    "crumbs": [
      "Home",
      "Presentations",
      "Solar wind discontinuities spatial evolution and energetic ion scattering"
    ]
  },
  {
    "objectID": "presentations/AGU23_poster.html#results",
    "href": "presentations/AGU23_poster.html#results",
    "title": "Solar wind discontinuities spatial evolution and energetic ion scattering",
    "section": "Results",
    "text": "Results\n\nNormalized occurrence rate of IDs drops with the radial distance from the Sun, following 1/r law.\n\n\n\n\n\n\nHigh energy particle has higher chance to cross uncertainty curve\nHigh shear magnetic field will make separatrix vanishes and the geometrical jumps of the quasiadiabatic invariant disappear",
    "crumbs": [
      "Home",
      "Presentations",
      "Solar wind discontinuities spatial evolution and energetic ion scattering"
    ]
  },
  {
    "objectID": "article.html",
    "href": "article.html",
    "title": "Solar wind discontinuities spatial evolution in the outer heliosphere",
    "section": "",
    "text": "What I did: I studied the solar wind discontinuities in the outer heliosphere using data from the Juno spacecraft during its cruise phase. I identified and analyzed the properties of the discontinuities at different radial distances from the Sun. I differentiated the temporal effect (correlated with solar activity) and spatial variations (correlated with radial distance).\nWhat I found: The normalized occurrence rate of IDs drops with the radial distance from the Sun, following a \\(1/r\\) law. The thickness of IDs increases with the radial distance from the Sun, but after normalization to the ion inertial length, the thickness of IDs decreases. The current intensity of IDs decreases with the radial distance from the Sun, but after normalization to the Alfven current, the current intensity of IDs increases.\nWhat it means: The results of this study provide a better understanding of the solar wind discontinuities in the outer heliosphere and their spatial evolution. This information is important for understanding the dynamics of the solar wind and testing the local generation mechanism of discontinuities.",
    "crumbs": [
      "Home",
      "Solar wind discontinuities spatial evolution in the outer heliosphere"
    ]
  },
  {
    "objectID": "article.html#dataset",
    "href": "article.html#dataset",
    "title": "Solar wind discontinuities spatial evolution in the outer heliosphere",
    "section": "Dataset",
    "text": "Dataset\nIn this study we use datasets of four missions measuring solar wind magnetic field and plasma. Synergistic observations of these missions should advance our understanding of the solar wind discontinuities, their radial distribution and evolution (Velli et al. 2020).\n\nThe solar wind plasma state, as evidenced by the sunspot number (referenced in Figure 1), plays a crucial role in understanding the dynamics of discontinuities. During the initial phase of the JUNO mission, the sunspot number reached its peak, indicating a period of heightened solar activity. However, by the end of the mission’s cruise phase, there was a significant decline in solar activity. This variation underscores the importance of calibrating the discontinuity properties in relation to solar activity levels to account for temporal fluctuations.\nFurthermore, an analysis of Figure 1 reveals the significance of the heliographic longitudinal difference between the Juno mission and Near-Earth missions (such as Wind and ARTEMIS) as well as STEREO-A missions. This longitudinal discrepancy ensures comprehensive coverage of the plasma en route to Juno. Specifically, when there is a substantial longitudinal difference between Juno and Earth, the difference between Juno and STEREO-A tends to be minimal, and vice versa. This relationship facilitates an extensive observation network for the plasma traveling towards Juno.\nThe time resolution of the magnetic field and plasma data for Juno, Wind, ARTEMIS, STEREO is summarized in the table below.\n\n\n\n\n\nTable 1: Missions info\n\n\n\n\n\n\nMission\n\\(\\delta t_B\\)\n\\(\\delta t_{plasma}\\)\nRadial coverage\nLaunch date\nwebsite\n\n\n\n\nJuno\n1 Hz\n\n1 - 5.5 AU\n2011-08-05 00:00:00\n[‘NASA’]\n\n\nARTEMIS\n5 Hz, …\n\n\n2007-02-17 00:00:00\n\n\n\nSTEREO-A\n8 Hz\n\n\n2006-10-26 00:00:00\n\n\n\nWIND\n11 Hz\n\n\n1994-11-01 00:00:00\n[‘NASA’]\n\n\nSolar Orbiter\n\n\n0.28 - 0.9 AU\n2020-02-10 00:00:00\n[‘ESA’]\n\n\nParker Solar Probe\n\n\n0.05 - 1 AU\n2018-08-12 00:00:00\n[‘NASA’]\n\n\n\n\n\n\n\n\nSource: Notes",
    "crumbs": [
      "Home",
      "Solar wind discontinuities spatial evolution in the outer heliosphere"
    ]
  },
  {
    "objectID": "article.html#model",
    "href": "article.html#model",
    "title": "Solar wind discontinuities spatial evolution in the outer heliosphere",
    "section": "Model",
    "text": "Model\nJune measurements do not include plasma characteristics, and to estimate discontinuity spatial scale (thicknesses) we will use solar wind speed obtained from the model of solar wind propagation. The hourly solar wind model data from the Two-Dimensional Outer Heliosphere Solar Wind Modeling (MSWIM2D) (Keebler et al. 2022) will be employed to determine the ion bulk velocity \\(v\\) and plasma density \\(n\\) at the location of the Juno mission. Utilizing the BATSRUS MHD solver, this model is capable of simulating the propagation of the solar wind from 1 to 75 astronomical units (AU) in the ecliptic plane, effectively encompassing the region of interest for our study. Figure 2 shows comparison of magnetic field magnitudes obtained from MSWIM2D and measured by Juno.\nThe model time resolution is hourly. After averaging Juno data to the same time resolution, we see that the model data is consistent with the Juno magnetic field data.\n\n\n\n\n\n\nFigure 2: a, Magnetic field magnitude from MSWIM2D and Juno. b-c, Plasma speed and density from MSWIM2D model. d, Juno radial distance from the Sun.",
    "crumbs": [
      "Home",
      "Solar wind discontinuities spatial evolution in the outer heliosphere"
    ]
  },
  {
    "objectID": "article.html#methods",
    "href": "article.html#methods",
    "title": "Solar wind discontinuities spatial evolution in the outer heliosphere",
    "section": "Methods",
    "text": "Methods\nWe use Liu’s (Liu, Fu, Cao, Wang, et al. 2022) method to identify discontinuities in the solar wind. This method has better compatibility for the discontinuities with minor field changes, and is more robust to the situation encountered in the outer heliosphere. For each sampling instant \\(t\\), we define three intervals: the pre-interval \\([-1,-1/2]\\cdot T+t\\), the middle interval \\([-1/,1/2]\\cdot T+t\\), and the post-interval \\([1/2,1]\\cdot T+t\\), in which \\(T\\) are time lags. Let time series of the magnetic field data in these three intervals are labeled \\({\\mathbf B}_-\\), \\({\\mathbf B}_0\\), \\({\\mathbf B}_+\\), respectively. Then for an discontinuity, the following three conditions should be satisfied: (1) \\(\\sigma({\\mathbf B}_0) &gt; 2\\max\\left(\\sigma({\\mathbf B}_-), \\sigma({\\mathbf B}_+)\\right)\\), (2) \\(\\sigma\\left({\\mathbf B}_-+{\\mathbf B}_+\\right)&gt;\\sigma({\\mathbf B}_-)+\\sigma({\\mathbf B}_+)\\), and (3) \\(|\\Delta {\\mathbf B}|&gt;|{\\mathbf B}_{bg}|/10\\), in which \\(\\sigma\\) and \\({\\mathbf B}_{bg}\\) represent the standard deviation and the background magnetic field magnitude, and \\(\\Delta {\\mathbf B}={\\mathbf B}(t+T/2)-{\\mathbf B}(t-T/2)\\). The first two conditions guarantee that the field changes of the discontinuity identified are large enough to be distinguished from the stochastic fluctuations or Alfven waves on magnetic fields, while the third is a supplementary condition to reduce the uncertainty of recognition.\nThen for each discontinuity identified, we calculate the distance matrix of the time series sequence (distance between each pair of magnetic field vectors) to determine the leading edge and trailing edge of the discontinuity. After that, we use the minimum or maximum variance analysis (MVA) analysis (Bengt U. Ö. Sonnerup and Scheible 1998; B. U. Ö. Sonnerup and Cahill Jr. 1967) to get the main (most varying) magnetic field component, \\(B_l\\), and medium variation component, \\(B_m\\). The maxium variance direction is then fitted by a step-like functions to extract the parameters to properly describe the discontinuity (we used logistic function here). Then we combine the magnetic field data and plasma data to obtain the thickness and the current density of the discontinuity.\n\\[\nB(t; A, \\mu, \\sigma, {\\mathrm{form=logistic}}) = A \\left[1 - \\frac{1}{1 + e^{\\alpha}} \\right]\n\\]\nwhere \\(\\alpha = (t - \\mu)/{\\sigma}\\).\nFigure 3 shows several examples of solar wind discontinuities detected by different spacecraft.\n\n\n\n\n\n\n\nFigure 3: Examples of IDs from ARTEMIS, STEREO, and Wind",
    "crumbs": [
      "Home",
      "Solar wind discontinuities spatial evolution in the outer heliosphere"
    ]
  },
  {
    "objectID": "article.html#occurrence-rate",
    "href": "article.html#occurrence-rate",
    "title": "Solar wind discontinuities spatial evolution in the outer heliosphere",
    "section": "Occurrence rate",
    "text": "Occurrence rate\nThe occurrence rate of IDs is investigated with regards of the radial distance from the Sun.\nNote the quantity of IDs per day is corrected with respect to data gap and the time the mission spent in the pristine solar wind.\nARTEMIS spacecrafts will only be exposed in the solar wind for a relative short time during its orbits around the Moon and the Moon would be in the magnetosphere for a long time as it orbits the earth. (The data is obtained from OMNIWEB, link: omniweb.gsfc.nasa.gov/ftpbrowser/themis_b_sw.txt)\nThe rate of occurrence depends linearly on the solar wind velocity (Söding et al. 2001), however the plasma velocity data in Juno mission is not available during its cruise phase. Therefore, we do not normalize the occurrence rate with respect to the solar wind speed. This influence of the solar wind speed on the occurrence rate might be mitigated by the fact all the spacecrafts are in the ecliptic plane, and the solar wind speed is not expected to change significantly with the radial distance from the Sun beyond \\(1\\) AU. So the decrease of the occurrence rate with the radial distance from the Sun is expected to be a real effect of the radial distance from the Sun.\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 4: The number of discontinuities measured by Juno per day coincides with the discontinuity number measured by STEREO, WIND, and ARTEMIS, when Juno is around \\(1\\) AU. This number (occurrence rate) decreases with distance (with time after \\(\\sim 2013\\)), as Juno moves from \\(1\\) AU to \\(5\\) AU. We will use the similar comparison for discontinuity characteristics and occurrence rate derived for PSP and Juno. The radial distance of Juno for 2011-2016 is shown in Figure 2.",
    "crumbs": [
      "Home",
      "Solar wind discontinuities spatial evolution in the outer heliosphere"
    ]
  },
  {
    "objectID": "article.html#thickness",
    "href": "article.html#thickness",
    "title": "Solar wind discontinuities spatial evolution in the outer heliosphere",
    "section": "Thickness",
    "text": "Thickness\nThe thickness \\(d\\) of a discontinuity is determined by\n\\[\nd = (v \\cdot n) \\Delta T\n\\]\nwith \\(v = v_{sw} - v_{s/c} + U\\) , where \\(\\Delta T\\) is the transition time (a factor of the \\(sigma\\) used in fitting) , \\(v_{sw}\\) is the solar wind velocity. The velocity of the spacecraft \\(v_{s/c}\\) and the propagation speed of the discontinuities \\(U\\) are negligible in our case.\nIn Vasko et al. (2022) paper, CS thickness is estimated by the formula \\(d = \\frac{\\Delta B_l}{2 \\mu_0 &lt; J_m&gt; }\\). Because of Equation 1, \\(d = \\frac{\\Delta B_l}{2 \\mu_0 &lt; J_m&gt; } = \\frac{\\Delta B_l V_n }{2 &lt;\\frac{d B_m}{ d t} &gt;}\\)\nThe transition time \\(\\Delta T\\) is determined in one second resolution data for all our missions to reduce the system error. (Note that highest time resolution of the data is not needed for the transition time determination by fitting method, see discussion in the appendix).\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 5: a, Thickness of IDs as a function of the radial distance from the Sun. b, Thickness of IDs normalized to the ion inertial length as a function of the radial distance from the Sun.",
    "crumbs": [
      "Home",
      "Solar wind discontinuities spatial evolution in the outer heliosphere"
    ]
  },
  {
    "objectID": "article.html#current-density",
    "href": "article.html#current-density",
    "title": "Solar wind discontinuities spatial evolution in the outer heliosphere",
    "section": "Current density",
    "text": "Current density\nThe peak current density \\(J_m\\) of a discontinuity is determined by\n\\[\nJ_m = - \\frac{1}{\\mu_0 V_n} \\frac{d B_m}{d t},\n\\tag{1}\\]\nwhere \\(\\mu_0\\) is the vacuum permeability and \\(V_n\\) is the normal component of the proton flow velocity.\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 6: a, Current density of IDs as a function of the radial distance from the Sun. b, Current density of IDs normalized to the Alfven current as a function of the radial distance from the Sun.",
    "crumbs": [
      "Home",
      "Solar wind discontinuities spatial evolution in the outer heliosphere"
    ]
  },
  {
    "objectID": "article.html#occurrence-rate-1",
    "href": "article.html#occurrence-rate-1",
    "title": "Solar wind discontinuities spatial evolution in the outer heliosphere",
    "section": "Occurrence rate",
    "text": "Occurrence rate\nThe normalized occurrence rate of IDs drops with the radial distance from the Sun, following \\(1/r\\) law.",
    "crumbs": [
      "Home",
      "Solar wind discontinuities spatial evolution in the outer heliosphere"
    ]
  },
  {
    "objectID": "article.html#thickness-1",
    "href": "article.html#thickness-1",
    "title": "Solar wind discontinuities spatial evolution in the outer heliosphere",
    "section": "Thickness",
    "text": "Thickness\nThe thickness of IDs increases with the radial distance from the Sun, but after normalization to ion inertial length, the thickness of IDs decreases.",
    "crumbs": [
      "Home",
      "Solar wind discontinuities spatial evolution in the outer heliosphere"
    ]
  },
  {
    "objectID": "article.html#current-density-1",
    "href": "article.html#current-density-1",
    "title": "Solar wind discontinuities spatial evolution in the outer heliosphere",
    "section": "Current density",
    "text": "Current density\nThe current density of IDs decrease with the radial distance from the Sun, but after normalization to the Alfven current , the current density of IDs increases.",
    "crumbs": [
      "Home",
      "Solar wind discontinuities spatial evolution in the outer heliosphere"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Solar wind discontinuities spatial evolution in the outer heliosphere",
    "section": "",
    "text": "manuscript please see here\nAGU poster here"
  },
  {
    "objectID": "index.html#publications",
    "href": "index.html#publications",
    "title": "Solar wind discontinuities spatial evolution in the outer heliosphere",
    "section": "",
    "text": "manuscript please see here\nAGU poster here"
  },
  {
    "objectID": "index.html#updates",
    "href": "index.html#updates",
    "title": "Solar wind discontinuities spatial evolution in the outer heliosphere",
    "section": "Updates",
    "text": "Updates\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNew Fit Width\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNew\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOld\n\n\n\n\n\n\n\n\n\n\n\n\nWind\n\n\n\n\n\n\n\nJuno\n\n\n\n\n\n\n\nDerivative method\n\n\n\n\n\n\n\nFit method"
  },
  {
    "objectID": "index.html#related-works",
    "href": "index.html#related-works",
    "title": "Solar wind discontinuities spatial evolution in the outer heliosphere",
    "section": "Related works",
    "text": "Related works\n\nSöding et al. (2001) studied the radial distribution of discontinuities in the solar wind between 0.3 and 19 AU during solar activity minimum.\nLiu et al. (2021) studied the spatial evolution of the discontinuities from 0.13-0.9 AU, using measurements from the Parker Solar Probe.\n\nTypical rate of occurrence is about 50 per day at 1AU\n\n\n\n\n\n\n\n\nDiscontinuities between 0.3 and 19 AU\n\n\n\n\n\n\n\nDiscontinuities between 0.13–0.9 AU\n\n\n\n\n\n\nFigure 1: Spatial distribution of the discontinuities\n\n\n\n\n\n\n\n\n\nNote\n\n\n\n\n\n\n\n\n\n\n\n\n\nCurrent sheets in the heliosheath: Voyager 1, 2009\n\n\n\n\n\n\n\nA rotational discontinuity (RD) detected at 0.126 AU\n\n\n\n\n\n\nFigure 2: Discontinuities examples across the heliosphere\n\n\n\n\n\n\n\n\n\nWind\nJuno\nDerivative method\nFit method\nDiscontinuities between 0.3 and 19 AU\nDiscontinuities between 0.13–0.9 AU\nCurrent sheets in the heliosheath: Voyager 1, 2009\nA rotational discontinuity (RD) detected at 0.126 AU"
  },
  {
    "objectID": "notebooks/missions/index.html",
    "href": "notebooks/missions/index.html",
    "title": "Missions",
    "section": "",
    "text": "This module includes helpful functions for working with mission (magnetic field and plasma) data. We currently support the following missions:\n\nParker Solar Probe\nJuno\nWind\nTHEMIS/ARTEMIS\nSTEREO\n\nNote: speasy and pyspedas are not suitable for processing large datasets, although they are useful for downloading and processing small datasets.\n\nspeasy cache file and data are not persistent\npyspedas loads the entire dataset into memory",
    "crumbs": [
      "Home",
      "Notebooks",
      "Missions"
    ]
  },
  {
    "objectID": "notebooks/missions/wind/index.html",
    "href": "notebooks/missions/wind/index.html",
    "title": "Wind",
    "section": "",
    "text": "See following notebooks for details:\nReferences:\nNotes:",
    "crumbs": [
      "Home",
      "Notebooks",
      "Missions",
      "Wind"
    ]
  },
  {
    "objectID": "notebooks/missions/wind/index.html#setup",
    "href": "notebooks/missions/wind/index.html#setup",
    "title": "Wind",
    "section": "Setup",
    "text": "Setup\n\nfrom kedro.pipeline.modular_pipeline import pipeline\n\nfrom discontinuitypy import PARAMS\nfrom discontinuitypy.pipelines.wind.mag import create_pipeline as create_mag_data_pipeline\nfrom discontinuitypy.pipelines.default.mission import create_combined_data_pipeline\n\nfrom typing import Optional\n\n\ndef create_pipeline(\n    sat_id=\"Wind\",\n    params: Optional[dict] = None,\n):\n    if params is None:\n        params = PARAMS\n    ts_state = params[sat_id][\"STATE\"].get(\"time_resolution\", 0)\n    ts_state_str = f\"ts_{ts_state}s\"\n    \n    input_combined_data = {\n        f\"{sat_id}.STATE.primary_data_{ts_state_str}\": f\"OMNI.LowRes.primary_data_{ts_state_str}\"\n    }\n\n    node_combined_data = pipeline(\n        create_combined_data_pipeline(sat_id),\n        inputs=input_combined_data,\n    )\n    \n    return (\n        create_mag_data_pipeline(sat_id)\n        + node_combined_data\n    )",
    "crumbs": [
      "Home",
      "Notebooks",
      "Missions",
      "Wind"
    ]
  },
  {
    "objectID": "notebooks/missions/juno/index.html",
    "href": "notebooks/missions/juno/index.html",
    "title": "IDs from Juno",
    "section": "",
    "text": "See following notebooks for details:",
    "crumbs": [
      "Home",
      "Notebooks",
      "Missions",
      "IDs from Juno"
    ]
  },
  {
    "objectID": "notebooks/missions/juno/index.html#background",
    "href": "notebooks/missions/juno/index.html#background",
    "title": "IDs from Juno",
    "section": "Background",
    "text": "Background\nSpacecraft-Solar equatorial\nhttps://pds-ppi.igpp.ucla.edu/data/JNO-SS-3-FGM-CAL-V1.0/INDEX/INDEX.TAB\n------------------------------------------------------------------------------\nJuno Mission Phases                                                           \n------------------------------------------------------------------------------\nStart       Mission                                                           \nDate        Phase                                                             \n==============================================================================\n2011-08-05  Launch                                                            \n2011-08-08  Inner Cruise 1                                                    \n2011-10-10  Inner Cruise 2                                                    \n2013-05-28  Inner Cruise 3                                                    \n2013-11-05  Quiet Cruise                                                      \n2016-01-05  Jupiter Approach                                                  \n2016-06-30  Jupiter Orbital Insertion                                         \n2016-07-05  Capture Orbit                                                     \n2016-10-19  Period Reduction Maneuver                                         \n2016-10-20  Orbits 1-2                                                        \n2016-11-09  Science Orbits                                                    \n2017-10-11  Deorbit\n\nCoordinate System of Data\n\nSE (Solar Equatorial)\n\nCode: se\nResampling options:\n\nNumber of seconds (1 or 60): se_rN[N]s\nResampled 1 hour: se_r1h\n\n\nPC (Planetocentric)\n\nCode: pc\nResampling options:\n\nNumber of seconds (1 or 60): pc_rN[N]s\n\n\nSS (Sun-State)\n\nCode: ss\nResampling options:\n\nNumber of seconds (1 or 60): ss_rN[N]s\n\n\nPL (Payload)\n\nCode: pl\nResampling options:\n\nNumber of seconds (1 or 60): pl_rN[N]s\n\n\n\nThere are three principal coordinate systems used to represent the data in this archive.\n\nThe SE coordinate system is a Spacecraft- Solar equatorial system and it will be used for cruise data only.\nThe sun-state (ss) and planetocentric (pc) will be used for Earth Fly By (EFB) and Jupiter orbital data.\nCartesian representations are used for all three coordinate systems. These coordinate systems are specified relative to a “target body” which may be any solar system object (but for this orbital operations will Jupiter). In what follows we will reference Jupiter as the target body, but, for example, if observations near a satellite (such as Io) are desired in Io-centric coordinates, the satellite Io may be specified as the target body.\n\nThe SE coordinate system is defined using the sun-spacecraft vector as the primary reference vector; sun’s rotation axis as the secondary reference vector (z). The x axis lies along the sun-spacecraft vector, the z axis is in the plane defined by the Sun’s rotation axis and the spacecraft-sun vector. The y axis completes the system.\nThe ss coordinate system is defined using the instantaneous Jupiter-Sun vector as the primary reference vector (x direction). The X-axis lies along this vector and is taken to be positive toward the Sun. The Jupiter orbital velocity vector is the second vector used to define the coordinate system; the y axis lies in the plane determined by the Jupiter-Sun vector and the velocity vector and is orthogonal to the x axis (very nearly the negative of the velocity vector). The vector cross product of x and y yields a vector z parallel to the northward (upward) normal of the orbit plane of Jupiter. This system is sometimes called a sun-state (ss) coordinate system since its principal vectors are the Sun vector and the Jupiter state vector.",
    "crumbs": [
      "Home",
      "Notebooks",
      "Missions",
      "IDs from Juno"
    ]
  },
  {
    "objectID": "notebooks/missions/juno/index.html#setup",
    "href": "notebooks/missions/juno/index.html#setup",
    "title": "IDs from Juno",
    "section": "Setup",
    "text": "Setup\n\nfrom discontinuitypy.datasets import IDsDataset\nimport polars as pl\nfrom fastcore.utils import walk\nfrom loguru import logger\n\n\n\n\n\n\n\n\n\n\n\n  \n\n\n\n\n16-Feb-24 22:55:54: UserWarning: Traceback (most recent call last):\n  File \"/Users/zijin/micromamba/envs/psp_conjunction/lib/python3.11/site-packages/pdpipe/__init__.py\", line 85, in &lt;module&gt;\n    from . import skintegrate\n  File \"/Users/zijin/micromamba/envs/psp_conjunction/lib/python3.11/site-packages/pdpipe/skintegrate.py\", line 20, in &lt;module&gt;\n    from sklearn.base import BaseEstimator\nModuleNotFoundError: No module named 'sklearn'\n\n\n16-Feb-24 22:55:54: UserWarning: pdpipe: Scikit-learn or skutil import failed. Scikit-learn-dependent pipeline stages will not be loaded.\n\n16-Feb-24 22:55:54: UserWarning: Traceback (most recent call last):\n  File \"/Users/zijin/micromamba/envs/psp_conjunction/lib/python3.11/site-packages/pdpipe/__init__.py\", line 105, in &lt;module&gt;\n    from . import nltk_stages\n  File \"/Users/zijin/micromamba/envs/psp_conjunction/lib/python3.11/site-packages/pdpipe/nltk_stages.py\", line 19, in &lt;module&gt;\n    import nltk\nModuleNotFoundError: No module named 'nltk'\n\n\n16-Feb-24 22:55:54: UserWarning: pdpipe: nltk import failed. nltk-dependent  pipeline stages will not be loaded.\n\n\n\n\nts = 1 # unit: seconds\ntau = 60 # unit: seconds\n\ndata_dir = '../../../data'\ndir_path = f'{data_dir}/03_primary/JNO_MAG_ts_{ts}s'\njuno_state_path = f'{data_dir}/03_primary/JNO_STATE_ts_3600s.parquet'\nvec_cols = ['v_x', 'v_y', 'v_z']\n\nformat = 'arrow'\nfname = f'events.JNO.ts_{ts}s_tau_{tau}s.{format}'\noutput_path = f'{data_dir}/05_reporting/{fname}'\n\n\nplasma_data = pl.scan_parquet(juno_state_path).sort('time')\nlogger.info(plasma_data.columns)\n\n2024-02-16 22:55:56.735 | INFO     | __main__:&lt;module&gt;:2 - ['radial_distance', 'plasma_density', 'plasma_temperature', 'time', 'model_b_r', 'model_b_t', 'model_b_n', 'v_x', 'v_y', 'v_z', 'plasma_speed', 'B_background_x', 'B_background_y', 'B_background_z']\n\n\n\njuno_events = []\nfor mag_path in walk(dir_path):\n    juno_mag_data = pl.scan_parquet(mag_path).drop('X', 'Y', 'Z').sort('time')\n\n    _juno_events = (\n        IDsDataset(\n            mag_data=juno_mag_data,\n            plasma_data=plasma_data,\n            tau=tau,\n            ts=ts,\n            vec_cols=vec_cols,\n            density_col=\"plasma_density\",\n            speed_col=\"plasma_speed\",\n            temperature_col=\"plasma_temperature\",\n        )\n        .find_events(return_best_fit=False)\n        .update_candidates_with_plasma_data()\n        .events\n    )\n    \n    juno_events.append(_juno_events)\n    \njuno_ids_dataset = IDsDataset(\n    events=pl.concat(juno_events),\n    mag_data= pl.scan_parquet(list(walk(dir_path))).drop('X', 'Y', 'Z').sort('time')\n).export(output_path)\n\n16-Feb-24 22:56:03: UserWarning: Ray execution environment not yet initialized. Initializing...\nTo remove this warning, run the following python code before doing dataframe operations:\n\n    import ray\n    ray.init()\n\n\n2024-02-16 22:56:06,150 INFO worker.py:1724 -- Started a local Ray instance.\n16-Feb-24 22:56:07: UserWarning: Distributing &lt;class 'pandas.core.frame.DataFrame'&gt; object. This may take some time.\n\n(_deploy_ray_func pid=91790) UserWarning: Traceback (most recent call last):\n(_deploy_ray_func pid=91790)   File \"/Users/zijin/micromamba/envs/psp_conjunction/lib/python3.11/site-packages/pdpipe/__init__.py\", line 85, in &lt;module&gt;\n(_deploy_ray_func pid=91790)     from . import skintegrate\n(_deploy_ray_func pid=91790)   File \"/Users/zijin/micromamba/envs/psp_conjunction/lib/python3.11/site-packages/pdpipe/skintegrate.py\", line 20, in &lt;module&gt;\n(_deploy_ray_func pid=91790)     from sklearn.base import BaseEstimator\n(_deploy_ray_func pid=91790) ModuleNotFoundError: No module named 'sklearn'\n(_deploy_ray_func pid=91790) \n(_deploy_ray_func pid=91790) UserWarning: pdpipe: Scikit-learn or skutil import failed. Scikit-learn-dependent pipeline stages will not be loaded.\n(_deploy_ray_func pid=91790) UserWarning: Traceback (most recent call last):\n(_deploy_ray_func pid=91790)   File \"/Users/zijin/micromamba/envs/psp_conjunction/lib/python3.11/site-packages/pdpipe/__init__.py\", line 105, in &lt;module&gt;\n(_deploy_ray_func pid=91790)     from . import nltk_stages\n(_deploy_ray_func pid=91790)   File \"/Users/zijin/micromamba/envs/psp_conjunction/lib/python3.11/site-packages/pdpipe/nltk_stages.py\", line 19, in &lt;module&gt;\n(_deploy_ray_func pid=91790)     import nltk\n(_deploy_ray_func pid=91790) ModuleNotFoundError: No module named 'nltk'\n(_deploy_ray_func pid=91790) \n(_deploy_ray_func pid=91790) UserWarning: pdpipe: nltk import failed. nltk-dependent  pipeline stages will not be loaded.\n(_deploy_ray_func pid=91790) UserWarning: Distributing &lt;class 'dict'&gt; object. This may take some time.\nDistributing Dataframe:   0%           Elapsed time: 00:00, estimated remaining time: ?\nDistributing Dataframe: 100%██████████ Elapsed time: 00:00, estimated remaining time: 00:00\nDistributing Dataframe: 100%██████████ Elapsed time: 00:00, estimated remaining time: 00:00\n(_deploy_ray_func pid=91794) UserWarning: Traceback (most recent call last): [repeated 22x across cluster] (Ray deduplicates logs by default. Set RAY_DEDUP_LOGS=0 to disable log deduplication, or see https://docs.ray.io/en/master/ray-observability/ray-logging.html#log-deduplication for more options.)\n(_deploy_ray_func pid=91794)   File \"/Users/zijin/micromamba/envs/psp_conjunction/lib/python3.11/site-packages/pdpipe/nltk_stages.py\", line 19, in &lt;module&gt; [repeated 44x across cluster]\n(_deploy_ray_func pid=91794)     from . import skintegrate [repeated 11x across cluster]\n(_deploy_ray_func pid=91794)     from sklearn.base import BaseEstimator [repeated 11x across cluster]\n(_deploy_ray_func pid=91794) ModuleNotFoundError: No module named 'sklearn' [repeated 11x across cluster]\n(_deploy_ray_func pid=91789)  [repeated 23x across cluster]\n(_deploy_ray_func pid=91794) UserWarning: pdpipe: Scikit-learn or skutil import failed. Scikit-learn-dependent pipeline stages will not be loaded. [repeated 11x across cluster]\n(_deploy_ray_func pid=91794)     from . import nltk_stages [repeated 11x across cluster]\n(_deploy_ray_func pid=91794)     import nltk [repeated 11x across cluster]\n(_deploy_ray_func pid=91794) ModuleNotFoundError: No module named 'nltk' [repeated 11x across cluster]\n(_deploy_ray_func pid=91794) UserWarning: pdpipe: nltk import failed. nltk-dependent  pipeline stages will not be loaded. [repeated 11x across cluster]\n(_deploy_ray_func pid=91790) UserWarning: Distributing &lt;class 'dict'&gt; object. This may take some time. [repeated 3944x across cluster]\nDistributing Dataframe:   0%           Elapsed time: 00:00, estimated remaining time: ? [repeated 273x across cluster]\nDistributing Dataframe: 100%██████████ Elapsed time: 00:00, estimated remaining time: 00:00 [repeated 3670x across cluster]\nDistributing Dataframe: 100%██████████ Elapsed time: 00:00, estimated remaining time: 00:00 [repeated 273x across cluster]\n(_deploy_ray_func pid=91795) RuntimeWarning: overflow encountered in exp\n(_deploy_ray_func pid=91788) UserWarning: Distributing &lt;class 'dict'&gt; object. This may take some time. [repeated 1477x across cluster]\nDistributing Dataframe:   0%           Elapsed time: 00:00, estimated remaining time: ? [repeated 127x across cluster]\nDistributing Dataframe: 100%██████████ Elapsed time: 00:00, estimated remaining time: 00:00 [repeated 1350x across cluster]\nDistributing Dataframe: 100%██████████ Elapsed time: 00:00, estimated remaining time: 00:00 [repeated 127x across cluster]\n(_deploy_ray_func pid=91795) RuntimeWarning: overflow encountered in exp [repeated 18x across cluster]\n16-Feb-24 22:56:27: UserWarning: Distributing &lt;class 'pandas.core.frame.DataFrame'&gt; object. This may take some time.\n\n(_deploy_ray_func pid=91790) UserWarning: Distributing &lt;class 'dict'&gt; object. This may take some time.\nDistributing Dataframe: 100%██████████ Elapsed time: 00:00, estimated remaining time: 00:00\n(_deploy_ray_func pid=91790) RuntimeWarning: overflow encountered in exp [repeated 4x across cluster]\n(_deploy_ray_func pid=91789) UserWarning: Distributing &lt;class 'dict'&gt; object. This may take some time.\nDistributing Dataframe: 100%██████████ Elapsed time: 00:00, estimated remaining time: 00:00\nDistributing Dataframe:   0%           Elapsed time: 00:00, estimated remaining time: ?\nDistributing Dataframe: 100%██████████ Elapsed time: 00:00, estimated remaining time: 00:00\nDistributing Dataframe:   0%           Elapsed time: 00:00, estimated remaining time: ?\nDistributing Dataframe: 100%██████████ Elapsed time: 00:00, estimated remaining time: 00:00\n(_deploy_ray_func pid=91799) \n(_deploy_ray_func pid=91790) UserWarning: Distributing &lt;class 'dict'&gt; object. This may take some time. [repeated 4431x across cluster]\nDistributing Dataframe: 100%██████████ Elapsed time: 00:00, estimated remaining time: 00:00 [repeated 4150x across cluster]\nDistributing Dataframe:   0%           Elapsed time: 00:00, estimated remaining time: ? [repeated 385x across cluster]\nDistributing Dataframe: 100%██████████ Elapsed time: 00:00, estimated remaining time: 00:00 [repeated 385x across cluster]\n(_deploy_ray_func pid=91799)  [repeated 4x across cluster]\n(_deploy_ray_func pid=91790) UserWarning: Distributing &lt;class 'dict'&gt; object. This may take some time. [repeated 4991x across cluster]\nDistributing Dataframe: 100%██████████ Elapsed time: 00:00, estimated remaining time: 00:00 [repeated 4581x across cluster]\nDistributing Dataframe:   0%           Elapsed time: 00:00, estimated remaining time: ? [repeated 381x across cluster]\nDistributing Dataframe: 100%██████████ Elapsed time: 00:00, estimated remaining time: 00:00 [repeated 381x across cluster]\n(_deploy_ray_func pid=91789)  [repeated 3x across cluster]\n(_deploy_ray_func pid=91792) RuntimeWarning: overflow encountered in exp\n(_deploy_ray_func pid=91788) UserWarning: Distributing &lt;class 'dict'&gt; object. This may take some time. [repeated 3240x across cluster]\nDistributing Dataframe: 100%██████████ Elapsed time: 00:00, estimated remaining time: 00:00 [repeated 2856x across cluster]\nDistributing Dataframe:   0%           Elapsed time: 00:00, estimated remaining time: ? [repeated 307x across cluster]\nDistributing Dataframe: 100%██████████ Elapsed time: 00:00, estimated remaining time: 00:00 [repeated 307x across cluster]\n(_deploy_ray_func pid=91797)  [repeated 3x across cluster]\n(_deploy_ray_func pid=91788) RuntimeWarning: overflow encountered in exp [repeated 13x across cluster]\n(_deploy_ray_func pid=91789) RuntimeWarning: overflow encountered in exp [repeated 20x across cluster]\n(_deploy_ray_func pid=91961) RuntimeWarning: overflow encountered in exp [repeated 21x across cluster]\n16-Feb-24 22:57:02: UserWarning: Distributing &lt;class 'pandas.core.frame.DataFrame'&gt; object. This may take some time.\n\n(_deploy_ray_func pid=91790) UserWarning: Distributing &lt;class 'dict'&gt; object. This may take some time.\nDistributing Dataframe: 100%██████████ Elapsed time: 00:00, estimated remaining time: 00:00\n(_deploy_ray_func pid=91929) RuntimeWarning: overflow encountered in exp\nDistributing Dataframe:   0%           Elapsed time: 00:00, estimated remaining time: ?\nDistributing Dataframe: 100%██████████ Elapsed time: 00:00, estimated remaining time: 00:00\nDistributing Dataframe:   0%           Elapsed time: 00:00, estimated remaining time: ?\nDistributing Dataframe: 100%██████████ Elapsed time: 00:00, estimated remaining time: 00:00\nDistributing Dataframe:   0%           Elapsed time: 00:00, estimated remaining time: ?\nDistributing Dataframe: 100%██████████ Elapsed time: 00:00, estimated remaining time: 00:00\nDistributing Dataframe:   0%           Elapsed time: 00:00, estimated remaining time: ?\n(_deploy_ray_func pid=91929) UserWarning: Traceback (most recent call last):\n(_deploy_ray_func pid=91929)   File \"/Users/zijin/micromamba/envs/psp_conjunction/lib/python3.11/site-packages/pdpipe/__init__.py\", line 85, in &lt;module&gt;\n(_deploy_ray_func pid=91929)     from . import skintegrate\n(_deploy_ray_func pid=91929)   File \"/Users/zijin/micromamba/envs/psp_conjunction/lib/python3.11/site-packages/pdpipe/skintegrate.py\", line 20, in &lt;module&gt;\n(_deploy_ray_func pid=91929)     from sklearn.base import BaseEstimator\n(_deploy_ray_func pid=91929) ModuleNotFoundError: No module named 'sklearn'\n(_deploy_ray_func pid=91929) \n(_deploy_ray_func pid=91929) UserWarning: pdpipe: Scikit-learn or skutil import failed. Scikit-learn-dependent pipeline stages will not be loaded.\n(_deploy_ray_func pid=91929) UserWarning: Traceback (most recent call last):\n(_deploy_ray_func pid=91929)   File \"/Users/zijin/micromamba/envs/psp_conjunction/lib/python3.11/site-packages/pdpipe/__init__.py\", line 105, in &lt;module&gt;\n(_deploy_ray_func pid=91929)     from . import nltk_stages\n(_deploy_ray_func pid=91929)   File \"/Users/zijin/micromamba/envs/psp_conjunction/lib/python3.11/site-packages/pdpipe/nltk_stages.py\", line 19, in &lt;module&gt;\n(_deploy_ray_func pid=91929)     import nltk\n(_deploy_ray_func pid=91929) ModuleNotFoundError: No module named 'nltk'\n(_deploy_ray_func pid=91929) \n(_deploy_ray_func pid=91929) UserWarning: pdpipe: nltk import failed. nltk-dependent  pipeline stages will not be loaded.\nDistributing Dataframe: 100%██████████ Elapsed time: 00:00, estimated remaining time: 00:00\n(_deploy_ray_func pid=91788) RuntimeWarning: overflow encountered in exp\n(_deploy_ray_func pid=91788) UserWarning: Distributing &lt;class 'dict'&gt; object. This may take some time. [repeated 2484x across cluster]\nDistributing Dataframe: 100%██████████ Elapsed time: 00:00, estimated remaining time: 00:00 [repeated 2243x across cluster]\nDistributing Dataframe:   0%           Elapsed time: 00:00, estimated remaining time: ? [repeated 237x across cluster]\nDistributing Dataframe: 100%██████████ Elapsed time: 00:00, estimated remaining time: 00:00 [repeated 237x across cluster]\n(_deploy_ray_func pid=91790)  [repeated 4x across cluster]\n16-Feb-24 22:57:14: UserWarning: Distributing &lt;class 'pandas.core.frame.DataFrame'&gt; object. This may take some time.\n\n(_deploy_ray_func pid=92061) RuntimeWarning: overflow encountered in exp [repeated 10x across cluster]\n(_deploy_ray_func pid=91790) UserWarning: Distributing &lt;class 'dict'&gt; object. This may take some time.\nDistributing Dataframe: 100%██████████ Elapsed time: 00:00, estimated remaining time: 00:00\n(_deploy_ray_func pid=91789) UserWarning: Distributing &lt;class 'dict'&gt; object. This may take some time.\nDistributing Dataframe: 100%██████████ Elapsed time: 00:00, estimated remaining time: 00:00\n(_deploy_ray_func pid=91789) UserWarning: Distributing &lt;class 'dict'&gt; object. This may take some time.\nDistributing Dataframe:   0%           Elapsed time: 00:00, estimated remaining time: ?\nDistributing Dataframe: 100%██████████ Elapsed time: 00:00, estimated remaining time: 00:00\n(_deploy_ray_func pid=91798) \n(_deploy_ray_func pid=91790) UserWarning: Distributing &lt;class 'dict'&gt; object. This may take some time. [repeated 3613x across cluster]\nDistributing Dataframe: 100%██████████ Elapsed time: 00:00, estimated remaining time: 00:00 [repeated 3251x across cluster]\nDistributing Dataframe:   0%           Elapsed time: 00:00, estimated remaining time: ? [repeated 362x across cluster]\nDistributing Dataframe: 100%██████████ Elapsed time: 00:00, estimated remaining time: 00:00 [repeated 362x across cluster]\n(_deploy_ray_func pid=91795)  [repeated 4x across cluster]\n(_deploy_ray_func pid=91789) UserWarning: Distributing &lt;class 'dict'&gt; object. This may take some time. [repeated 4993x across cluster]\nDistributing Dataframe: 100%██████████ Elapsed time: 00:00, estimated remaining time: 00:00 [repeated 4639x across cluster]\nDistributing Dataframe:   0%           Elapsed time: 00:00, estimated remaining time: ? [repeated 353x across cluster]\nDistributing Dataframe: 100%██████████ Elapsed time: 00:00, estimated remaining time: 00:00 [repeated 353x across cluster]\n(_deploy_ray_func pid=91790)  [repeated 2x across cluster]\n(_deploy_ray_func pid=91790) UserWarning: Distributing &lt;class 'dict'&gt; object. This may take some time. [repeated 4705x across cluster]\nDistributing Dataframe: 100%██████████ Elapsed time: 00:00, estimated remaining time: 00:00 [repeated 4312x across cluster]\nDistributing Dataframe:   0%           Elapsed time: 00:00, estimated remaining time: ? [repeated 394x across cluster]\nDistributing Dataframe: 100%██████████ Elapsed time: 00:00, estimated remaining time: 00:00 [repeated 394x across cluster]\n(_deploy_ray_func pid=91929)  [repeated 7x across cluster]\n(_deploy_ray_func pid=91799) RuntimeWarning: overflow encountered in exp\n(_deploy_ray_func pid=91788) UserWarning: Distributing &lt;class 'dict'&gt; object. This may take some time. [repeated 4322x across cluster]\nDistributing Dataframe: 100%██████████ Elapsed time: 00:00, estimated remaining time: 00:00 [repeated 3901x across cluster]\nDistributing Dataframe:   0%           Elapsed time: 00:00, estimated remaining time: ? [repeated 421x across cluster]\nDistributing Dataframe: 100%██████████ Elapsed time: 00:00, estimated remaining time: 00:00 [repeated 421x across cluster]\n(_deploy_ray_func pid=91788)  [repeated 4x across cluster]\n(_deploy_ray_func pid=91795) RuntimeWarning: overflow encountered in exp [repeated 17x across cluster]\n(_deploy_ray_func pid=91788) RuntimeWarning: overflow encountered in exp [repeated 21x across cluster]\n(_deploy_ray_func pid=91795) RuntimeWarning: overflow encountered in exp [repeated 19x across cluster]\n16-Feb-24 22:58:03: UserWarning: Distributing &lt;class 'pandas.core.frame.DataFrame'&gt; object. This may take some time.\n\n(_deploy_ray_func pid=91790) UserWarning: Distributing &lt;class 'dict'&gt; object. This may take some time.\nDistributing Dataframe: 100%██████████ Elapsed time: 00:00, estimated remaining time: 00:00\n(_deploy_ray_func pid=91794) RuntimeWarning: overflow encountered in exp [repeated 8x across cluster]\nDistributing Dataframe:   0%           Elapsed time: 00:00, estimated remaining time: ?\nDistributing Dataframe: 100%██████████ Elapsed time: 00:00, estimated remaining time: 00:00\nDistributing Dataframe:   0%           Elapsed time: 00:00, estimated remaining time: ?\nDistributing Dataframe: 100%██████████ Elapsed time: 00:00, estimated remaining time: 00:00\nDistributing Dataframe:   0%           Elapsed time: 00:00, estimated remaining time: ?\nDistributing Dataframe: 100%██████████ Elapsed time: 00:00, estimated remaining time: 00:00\nDistributing Dataframe:   0%           Elapsed time: 00:00, estimated remaining time: ?\nDistributing Dataframe: 100%██████████ Elapsed time: 00:00, estimated remaining time: 00:00\nDistributing Dataframe:   0%           Elapsed time: 00:00, estimated remaining time: ?\nDistributing Dataframe: 100%██████████ Elapsed time: 00:00, estimated remaining time: 00:00\nDistributing Dataframe:   0%           Elapsed time: 00:00, estimated remaining time: ?\nDistributing Dataframe: 100%██████████ Elapsed time: 00:00, estimated remaining time: 00:00\nDistributing Dataframe:   0%           Elapsed time: 00:00, estimated remaining time: ?\nDistributing Dataframe: 100%██████████ Elapsed time: 00:00, estimated remaining time: 00:00\nDistributing Dataframe:   0%           Elapsed time: 00:00, estimated remaining time: ?\nDistributing Dataframe: 100%██████████ Elapsed time: 00:00, estimated remaining time: 00:00\nDistributing Dataframe:   0%           Elapsed time: 00:00, estimated remaining time: ?\nDistributing Dataframe: 100%██████████ Elapsed time: 00:00, estimated remaining time: 00:00\nDistributing Dataframe:   0%           Elapsed time: 00:00, estimated remaining time: ?\nDistributing Dataframe: 100%██████████ Elapsed time: 00:00, estimated remaining time: 00:00\n(_deploy_ray_func pid=91792) \n(_deploy_ray_func pid=91788) UserWarning: Distributing &lt;class 'dict'&gt; object. This may take some time. [repeated 4625x across cluster]\nDistributing Dataframe: 100%██████████ Elapsed time: 00:00, estimated remaining time: 00:00 [repeated 4248x across cluster]\nDistributing Dataframe:   0%           Elapsed time: 00:00, estimated remaining time: ? [repeated 383x across cluster]\nDistributing Dataframe: 100%██████████ Elapsed time: 00:00, estimated remaining time: 00:00 [repeated 383x across cluster]\n(_deploy_ray_func pid=91790)  [repeated 7x across cluster]\n(_deploy_ray_func pid=91789) UserWarning: Distributing &lt;class 'dict'&gt; object. This may take some time. [repeated 5382x across cluster]\nDistributing Dataframe: 100%██████████ Elapsed time: 00:00, estimated remaining time: 00:00 [repeated 4766x across cluster]\nDistributing Dataframe:   0%           Elapsed time: 00:00, estimated remaining time: ? [repeated 613x across cluster]\nDistributing Dataframe: 100%██████████ Elapsed time: 00:00, estimated remaining time: 00:00 [repeated 613x across cluster]\n(_deploy_ray_func pid=91796)  [repeated 4x across cluster]\n(_deploy_ray_func pid=91788) UserWarning: Distributing &lt;class 'dict'&gt; object. This may take some time. [repeated 4548x across cluster]\nDistributing Dataframe: 100%██████████ Elapsed time: 00:00, estimated remaining time: 00:00 [repeated 3924x across cluster]\n(_deploy_ray_func pid=91792) RuntimeWarning: overflow encountered in exp\nDistributing Dataframe:   0%           Elapsed time: 00:00, estimated remaining time: ? [repeated 612x across cluster]\nDistributing Dataframe: 100%██████████ Elapsed time: 00:00, estimated remaining time: 00:00 [repeated 612x across cluster]\n(_deploy_ray_func pid=91788)  [repeated 4x across cluster]\n(_deploy_ray_func pid=91788) UserWarning: Distributing &lt;class 'dict'&gt; object. This may take some time. [repeated 3x across cluster]\nDistributing Dataframe: 100%██████████ Elapsed time: 00:00, estimated remaining time: 00:00 [repeated 2x across cluster]\n(_deploy_ray_func pid=91789) RuntimeWarning: overflow encountered in exp [repeated 20x across cluster]\n(_deploy_ray_func pid=91790) RuntimeWarning: overflow encountered in exp [repeated 36x across cluster]\n(_deploy_ray_func pid=91794) RuntimeWarning: overflow encountered in exp [repeated 26x across cluster]\n16-Feb-24 22:58:42: UserWarning: Distributing &lt;class 'pandas.core.frame.DataFrame'&gt; object. This may take some time.\n\n(_deploy_ray_func pid=91790) UserWarning: Distributing &lt;class 'dict'&gt; object. This may take some time.\nDistributing Dataframe: 100%██████████ Elapsed time: 00:00, estimated remaining time: 00:00\n(_deploy_ray_func pid=91790) UserWarning: Distributing &lt;class 'dict'&gt; object. This may take some time.\nDistributing Dataframe: 100%██████████ Elapsed time: 00:00, estimated remaining time: 00:00\n(_deploy_ray_func pid=92331) RuntimeWarning: overflow encountered in exp [repeated 10x across cluster]\nDistributing Dataframe:   0%           Elapsed time: 00:00, estimated remaining time: ?\nDistributing Dataframe: 100%██████████ Elapsed time: 00:00, estimated remaining time: 00:00\nDistributing Dataframe:   0%           Elapsed time: 00:00, estimated remaining time: ?\nDistributing Dataframe: 100%██████████ Elapsed time: 00:00, estimated remaining time: 00:00\nDistributing Dataframe:   0%           Elapsed time: 00:00, estimated remaining time: ?\nDistributing Dataframe: 100%██████████ Elapsed time: 00:00, estimated remaining time: 00:00\nDistributing Dataframe:   0%           Elapsed time: 00:00, estimated remaining time: ?\nDistributing Dataframe: 100%██████████ Elapsed time: 00:00, estimated remaining time: 00:00\nDistributing Dataframe:   0%           Elapsed time: 00:00, estimated remaining time: ?\nDistributing Dataframe: 100%██████████ Elapsed time: 00:00, estimated remaining time: 00:00\nDistributing Dataframe:   0%           Elapsed time: 00:00, estimated remaining time: ?\nDistributing Dataframe: 100%██████████ Elapsed time: 00:00, estimated remaining time: 00:00\nDistributing Dataframe:   0%           Elapsed time: 00:00, estimated remaining time: ?\nDistributing Dataframe: 100%██████████ Elapsed time: 00:00, estimated remaining time: 00:00\nDistributing Dataframe:   0%           Elapsed time: 00:00, estimated remaining time: ?\nDistributing Dataframe: 100%██████████ Elapsed time: 00:00, estimated remaining time: 00:00\n(_deploy_ray_func pid=91789) \n(_deploy_ray_func pid=91790) UserWarning: Distributing &lt;class 'dict'&gt; object. This may take some time. [repeated 3829x across cluster]\nDistributing Dataframe: 100%██████████ Elapsed time: 00:00, estimated remaining time: 00:00 [repeated 3454x across cluster]\nDistributing Dataframe:   0%           Elapsed time: 00:00, estimated remaining time: ? [repeated 371x across cluster]\nDistributing Dataframe: 100%██████████ Elapsed time: 00:00, estimated remaining time: 00:00 [repeated 371x across cluster]\n(_deploy_ray_func pid=91793)  [repeated 6x across cluster]\n(_deploy_ray_func pid=91790) UserWarning: Distributing &lt;class 'dict'&gt; object. This may take some time. [repeated 4456x across cluster]\nDistributing Dataframe: 100%██████████ Elapsed time: 00:00, estimated remaining time: 00:00 [repeated 4068x across cluster]\nDistributing Dataframe:   0%           Elapsed time: 00:00, estimated remaining time: ? [repeated 394x across cluster]\nDistributing Dataframe: 100%██████████ Elapsed time: 00:00, estimated remaining time: 00:00 [repeated 394x across cluster]\n(_deploy_ray_func pid=91795) \n(_deploy_ray_func pid=91792) RuntimeWarning: overflow encountered in exp\n(_deploy_ray_func pid=91788) UserWarning: Distributing &lt;class 'dict'&gt; object. This may take some time. [repeated 2118x across cluster]\nDistributing Dataframe: 100%██████████ Elapsed time: 00:00, estimated remaining time: 00:00 [repeated 1917x across cluster]\nDistributing Dataframe:   0%           Elapsed time: 00:00, estimated remaining time: ? [repeated 191x across cluster]\nDistributing Dataframe: 100%██████████ Elapsed time: 00:00, estimated remaining time: 00:00 [repeated 191x across cluster]\n(_deploy_ray_func pid=92460) RuntimeWarning: overflow encountered in exp [repeated 16x across cluster]\n(_deploy_ray_func pid=92496) RuntimeWarning: overflow encountered in exp [repeated 20x across cluster]",
    "crumbs": [
      "Home",
      "Notebooks",
      "Missions",
      "IDs from Juno"
    ]
  },
  {
    "objectID": "notebooks/missions/juno/index.html#check-the-discontinuity-in-the-last-year-of-juno-cruise-phase",
    "href": "notebooks/missions/juno/index.html#check-the-discontinuity-in-the-last-year-of-juno-cruise-phase",
    "title": "IDs from Juno",
    "section": "Check the discontinuity in the last year of Juno cruise phase",
    "text": "Check the discontinuity in the last year of Juno cruise phase\n\nmag_path = sorted(list(walk(dir_path)))[-1]\njuno_mag_data = pl.scan_parquet(mag_path).drop('X', 'Y', 'Z').sort('time')\n\nids_ds = (\n    IDsDataset(\n        mag_data=juno_mag_data,\n        plasma_data=plasma_data,\n        tau=tau,\n        ts=ts,\n        vec_cols=vec_cols,\n        density_col=\"plasma_density\",\n        speed_col=\"plasma_speed\",\n        temperature_col=\"plasma_temperature\",\n    )\n    .find_events(return_best_fit=True)\n    .update_candidates_with_plasma_data()\n)\n\n16-Feb-24 22:52:38: UserWarning: Ray execution environment not yet initialized. Initializing...\nTo remove this warning, run the following python code before doing dataframe operations:\n\n    import ray\n    ray.init()\n\n\n2024-02-16 22:52:40,078 INFO worker.py:1724 -- Started a local Ray instance.\n16-Feb-24 22:52:41: UserWarning: Distributing &lt;class 'pandas.core.frame.DataFrame'&gt; object. This may take some time.\n\n(_deploy_ray_func pid=91304) UserWarning: Traceback (most recent call last):\n(_deploy_ray_func pid=91304)   File \"/Users/zijin/micromamba/envs/psp_conjunction/lib/python3.11/site-packages/pdpipe/__init__.py\", line 85, in &lt;module&gt;\n(_deploy_ray_func pid=91304)     from . import skintegrate\n(_deploy_ray_func pid=91304)   File \"/Users/zijin/micromamba/envs/psp_conjunction/lib/python3.11/site-packages/pdpipe/skintegrate.py\", line 20, in &lt;module&gt;\n(_deploy_ray_func pid=91304)     from sklearn.base import BaseEstimator\n(_deploy_ray_func pid=91304) ModuleNotFoundError: No module named 'sklearn'\n(_deploy_ray_func pid=91304) \n(_deploy_ray_func pid=91304) UserWarning: pdpipe: Scikit-learn or skutil import failed. Scikit-learn-dependent pipeline stages will not be loaded.\n(_deploy_ray_func pid=91304) UserWarning: Traceback (most recent call last):\n(_deploy_ray_func pid=91304)   File \"/Users/zijin/micromamba/envs/psp_conjunction/lib/python3.11/site-packages/pdpipe/__init__.py\", line 105, in &lt;module&gt;\n(_deploy_ray_func pid=91304)     from . import nltk_stages\n(_deploy_ray_func pid=91304)   File \"/Users/zijin/micromamba/envs/psp_conjunction/lib/python3.11/site-packages/pdpipe/nltk_stages.py\", line 19, in &lt;module&gt;\n(_deploy_ray_func pid=91304)     import nltk\n(_deploy_ray_func pid=91304) ModuleNotFoundError: No module named 'nltk'\n(_deploy_ray_func pid=91304) \n(_deploy_ray_func pid=91304) UserWarning: pdpipe: nltk import failed. nltk-dependent  pipeline stages will not be loaded.\n(_deploy_ray_func pid=91305) UserWarning: Distributing &lt;class 'dict'&gt; object. This may take some time.\nDistributing Dataframe:   0%           Elapsed time: 00:00, estimated remaining time: ?\nDistributing Dataframe: 100%██████████ Elapsed time: 00:00, estimated remaining time: 00:00\nDistributing Dataframe: 100%██████████ Elapsed time: 00:00, estimated remaining time: 00:00\n(_deploy_ray_func pid=91309) RuntimeWarning: overflow encountered in exp\n(_deploy_ray_func pid=91306) UserWarning: Traceback (most recent call last): [repeated 22x across cluster] (Ray deduplicates logs by default. Set RAY_DEDUP_LOGS=0 to disable log deduplication, or see https://docs.ray.io/en/master/ray-observability/ray-logging.html#log-deduplication for more options.)\n(_deploy_ray_func pid=91306)   File \"/Users/zijin/micromamba/envs/psp_conjunction/lib/python3.11/site-packages/pdpipe/nltk_stages.py\", line 19, in &lt;module&gt; [repeated 44x across cluster]\n(_deploy_ray_func pid=91306)     from . import skintegrate [repeated 11x across cluster]\n(_deploy_ray_func pid=91306)     from sklearn.base import BaseEstimator [repeated 11x across cluster]\n(_deploy_ray_func pid=91306) ModuleNotFoundError: No module named 'sklearn' [repeated 11x across cluster]\n(_deploy_ray_func pid=91306)  [repeated 25x across cluster]\n(_deploy_ray_func pid=91306) UserWarning: pdpipe: Scikit-learn or skutil import failed. Scikit-learn-dependent pipeline stages will not be loaded. [repeated 11x across cluster]\n(_deploy_ray_func pid=91306)     from . import nltk_stages [repeated 11x across cluster]\n(_deploy_ray_func pid=91306)     import nltk [repeated 11x across cluster]\n(_deploy_ray_func pid=91306) ModuleNotFoundError: No module named 'nltk' [repeated 11x across cluster]\n(_deploy_ray_func pid=91306) UserWarning: pdpipe: nltk import failed. nltk-dependent  pipeline stages will not be loaded. [repeated 11x across cluster]\n(_deploy_ray_func pid=91306) UserWarning: Distributing &lt;class 'dict'&gt; object. This may take some time. [repeated 2484x across cluster]\nDistributing Dataframe:   0%           Elapsed time: 00:00, estimated remaining time: ? [repeated 239x across cluster]\nDistributing Dataframe: 100%██████████ Elapsed time: 00:00, estimated remaining time: 00:00 [repeated 2244x across cluster]\nDistributing Dataframe: 100%██████████ Elapsed time: 00:00, estimated remaining time: 00:00 [repeated 239x across cluster]\n\n\n\n\n\n\n\n\nids_ds.plot_candidates(num=20, plot_fit_data=True)\n\n2024-02-16 22:52:51.562 | INFO     | discontinuitypy.datasets:plot_candidates:205 - Candidates indices: [1858, 1167, 1014, 2346, 784, 833, 1623, 2242, 2280, 1117, 257, 1339, 905, 1388, 39, 1238, 281, 294, 596, 1127]\n\n\n\n\n[(&lt;Figure size 1200x500 with 1 Axes&gt;,\n  &lt;Axes: title={'center': '\\n#Fit# $\\\\max dB/dt$: -0.04, $R^2$: 0.98, $\\\\chi^2$: 0.01'}, ylabel='$B$\\n[nT LMN]'&gt;),\n (&lt;Figure size 1200x500 with 1 Axes&gt;,\n  &lt;Axes: title={'center': '\\n#Fit# $\\\\max dB/dt$: -0.10, $R^2$: 0.91, $\\\\chi^2$: 0.08'}, ylabel='$B$\\n[nT LMN]'&gt;),\n (&lt;Figure size 1200x500 with 1 Axes&gt;,\n  &lt;Axes: title={'center': '\\n#Fit# $\\\\max dB/dt$: -0.03, $R^2$: 0.94, $\\\\chi^2$: 0.05'}, ylabel='$B$\\n[nT LMN]'&gt;),\n (&lt;Figure size 1200x500 with 1 Axes&gt;,\n  &lt;Axes: title={'center': '\\n#Fit# $\\\\max dB/dt$: -0.12, $R^2$: 0.99, $\\\\chi^2$: 0.22'}, ylabel='$B$\\n[nT LMN]'&gt;),\n (&lt;Figure size 1200x500 with 1 Axes&gt;,\n  &lt;Axes: title={'center': '\\n#Fit# $\\\\max dB/dt$: -0.17, $R^2$: 0.79, $\\\\chi^2$: 0.27'}, ylabel='$B$\\n[nT LMN]'&gt;),\n (&lt;Figure size 1200x500 with 1 Axes&gt;,\n  &lt;Axes: title={'center': '\\n#Fit# $\\\\max dB/dt$: 0.19, $R^2$: 0.96, $\\\\chi^2$: 0.07'}, ylabel='$B$\\n[nT LMN]'&gt;),\n (&lt;Figure size 1200x500 with 1 Axes&gt;,\n  &lt;Axes: title={'center': '\\n#Fit# $\\\\max dB/dt$: -0.19, $R^2$: 0.84, $\\\\chi^2$: 1.10'}, ylabel='$B$\\n[nT LMN]'&gt;),\n (&lt;Figure size 1200x500 with 1 Axes&gt;,\n  &lt;Axes: title={'center': '\\n#Fit# $\\\\max dB/dt$: -0.75, $R^2$: 0.99, $\\\\chi^2$: 4.09'}, ylabel='$B$\\n[nT LMN]'&gt;),\n (&lt;Figure size 1200x500 with 1 Axes&gt;,\n  &lt;Axes: title={'center': '\\n#Fit# $\\\\max dB/dt$: -0.30, $R^2$: 1.00, $\\\\chi^2$: 0.01'}, ylabel='$B$\\n[nT LMN]'&gt;),\n (&lt;Figure size 1200x500 with 1 Axes&gt;,\n  &lt;Axes: title={'center': '\\n#Fit# $\\\\max dB/dt$: 0.09, $R^2$: 0.96, $\\\\chi^2$: 0.43'}, ylabel='$B$\\n[nT LMN]'&gt;),\n (&lt;Figure size 1200x500 with 1 Axes&gt;,\n  &lt;Axes: title={'center': '\\n#Fit# $\\\\max dB/dt$: -0.03, $R^2$: 0.97, $\\\\chi^2$: 0.01'}, ylabel='$B$\\n[nT LMN]'&gt;),\n (&lt;Figure size 1200x500 with 1 Axes&gt;,\n  &lt;Axes: title={'center': '\\n#Fit# $\\\\max dB/dt$: 0.09, $R^2$: 0.98, $\\\\chi^2$: 0.01'}, ylabel='$B$\\n[nT LMN]'&gt;),\n (&lt;Figure size 1200x500 with 1 Axes&gt;,\n  &lt;Axes: title={'center': '\\n#Fit# $\\\\max dB/dt$: 0.01, $R^2$: 0.70, $\\\\chi^2$: 0.06'}, ylabel='$B$\\n[nT LMN]'&gt;),\n (&lt;Figure size 1200x500 with 1 Axes&gt;,\n  &lt;Axes: title={'center': '\\n#Fit# $\\\\max dB/dt$: -0.10, $R^2$: 1.00, $\\\\chi^2$: 0.00'}, ylabel='$B$\\n[nT LMN]'&gt;),\n (&lt;Figure size 1200x500 with 1 Axes&gt;,\n  &lt;Axes: title={'center': '\\n#Fit# $\\\\max dB/dt$: -0.17, $R^2$: 0.87, $\\\\chi^2$: 0.30'}, ylabel='$B$\\n[nT LMN]'&gt;),\n (&lt;Figure size 1200x500 with 1 Axes&gt;,\n  &lt;Axes: title={'center': '\\n#Fit# $\\\\max dB/dt$: 0.02, $R^2$: 0.99, $\\\\chi^2$: 0.01'}, ylabel='$B$\\n[nT LMN]'&gt;),\n (&lt;Figure size 1200x500 with 1 Axes&gt;,\n  &lt;Axes: title={'center': '\\n#Fit# $\\\\max dB/dt$: 0.01, $R^2$: 0.92, $\\\\chi^2$: 0.02'}, ylabel='$B$\\n[nT LMN]'&gt;),\n (&lt;Figure size 1200x500 with 1 Axes&gt;,\n  &lt;Axes: title={'center': '\\n#Fit# $\\\\max dB/dt$: -0.02, $R^2$: 0.93, $\\\\chi^2$: 0.07'}, ylabel='$B$\\n[nT LMN]'&gt;),\n (&lt;Figure size 1200x500 with 1 Axes&gt;,\n  &lt;Axes: title={'center': '\\n#Fit# $\\\\max dB/dt$: -0.06, $R^2$: 0.98, $\\\\chi^2$: 0.05'}, ylabel='$B$\\n[nT LMN]'&gt;),\n (&lt;Figure size 1200x500 with 1 Axes&gt;,\n  &lt;Axes: title={'center': '\\n#Fit# $\\\\max dB/dt$: 0.09, $R^2$: 0.99, $\\\\chi^2$: 0.02'}, ylabel='$B$\\n[nT LMN]'&gt;)]",
    "crumbs": [
      "Home",
      "Notebooks",
      "Missions",
      "IDs from Juno"
    ]
  },
  {
    "objectID": "notebooks/missions/juno/index.html#processing-the-whole-data",
    "href": "notebooks/missions/juno/index.html#processing-the-whole-data",
    "title": "IDs from Juno",
    "section": "Processing the whole data",
    "text": "Processing the whole data",
    "crumbs": [
      "Home",
      "Notebooks",
      "Missions",
      "IDs from Juno"
    ]
  },
  {
    "objectID": "notebooks/missions/juno/index.html#obsolete",
    "href": "notebooks/missions/juno/index.html#obsolete",
    "title": "IDs from Juno",
    "section": "Obsolete",
    "text": "Obsolete\n\nEstimate\n1 day of data resampled by 1 sec is about 12 MB.\nSo 1 year of data is about 4 GB, and 6 years of JUNO Cruise data is about 24 GB.\nDownloading rate is about 250 KB/s, so it will take about 3 days to download all the data.\n\nnum_of_files = 6*365\njno_file_size = 12e3\nthm_file_size = 40e3\nfiles_size = jno_file_size + thm_file_size\ndownloading_rate = 250\nprocessing_rate = 1/60\n\ntime_to_download = num_of_files * files_size / downloading_rate / 60 / 60\nspace_required = num_of_files * files_size / 1e6\ntime_to_process = num_of_files / processing_rate / 60 / 60\n\nprint(f\"Time to download: {time_to_download:.2f} hours\")\nprint(f\"Disk space required: {space_required:.2f} GB\")\nprint(f\"Time to process: {time_to_process:.2f} hours\")",
    "crumbs": [
      "Home",
      "Notebooks",
      "Missions",
      "IDs from Juno"
    ]
  },
  {
    "objectID": "notebooks/04_properties.html",
    "href": "notebooks/04_properties.html",
    "title": "SWD Properties",
    "section": "",
    "text": "::: {#cell-2 .cell 0=‘h’ 1=‘i’ 2=‘d’ 3=‘e’ execution_count=1}\nimport polars as pl\nimport polars.selectors as cs\nfrom loguru import logger\n:::\n::: {#cell-3 .cell 0=‘h’ 1=‘i’ 2=‘d’ 3=‘e’ execution_count=2}\n%load_ext autoreload\n%autoreload 2\n:::\nConnect python with R kernel\n\nfrom beforerr.r import py2rpy_polars\nimport rpy2.robjects as robjects\n\n%load_ext rpy2.ipython\n\nr = robjects.r\nr.source('utils.R')\n\nconv_pl = py2rpy_polars()\n\nR[write to console]: \nAttaching package: ‘dplyr’\n\n\nR[write to console]: The following objects are masked from ‘package:stats’:\n\n    filter, lag\n\n\nR[write to console]: The following objects are masked from ‘package:base’:\n\n    intersect, setdiff, setequal, union",
    "crumbs": [
      "Home",
      "Notebooks",
      "SWD Properties"
    ]
  },
  {
    "objectID": "notebooks/04_properties.html#setup",
    "href": "notebooks/04_properties.html#setup",
    "title": "SWD Properties",
    "section": "",
    "text": "::: {#cell-2 .cell 0=‘h’ 1=‘i’ 2=‘d’ 3=‘e’ execution_count=1}\nimport polars as pl\nimport polars.selectors as cs\nfrom loguru import logger\n:::\n::: {#cell-3 .cell 0=‘h’ 1=‘i’ 2=‘d’ 3=‘e’ execution_count=2}\n%load_ext autoreload\n%autoreload 2\n:::\nConnect python with R kernel\n\nfrom beforerr.r import py2rpy_polars\nimport rpy2.robjects as robjects\n\n%load_ext rpy2.ipython\n\nr = robjects.r\nr.source('utils.R')\n\nconv_pl = py2rpy_polars()\n\nR[write to console]: \nAttaching package: ‘dplyr’\n\n\nR[write to console]: The following objects are masked from ‘package:stats’:\n\n    filter, lag\n\n\nR[write to console]: The following objects are masked from ‘package:base’:\n\n    intersect, setdiff, setequal, union",
    "crumbs": [
      "Home",
      "Notebooks",
      "SWD Properties"
    ]
  },
  {
    "objectID": "notebooks/04_properties.html#processing-datasets",
    "href": "notebooks/04_properties.html#processing-datasets",
    "title": "SWD Properties",
    "section": "Processing datasets",
    "text": "Processing datasets\n\nts = 1 # unit: seconds\ntau = 60 # unit: seconds\ndata_dir = \"../data\"\nformat = \"arrow\"\n\n\nparameters = ['j0_k', 'j0_k_norm',  'L_k_fit', 'L_k', 'L_k_fit_norm', 'L_k_norm']\n\n\ndef load_events(name: str, ts: float, tau: float, method ='derivative') -&gt; pl.DataFrame:\n    if method == 'derivative':\n        format = 'parquet'\n        filepath = f\"{data_dir}/08_reporting/events/l1/{name}_ts_{ts}s_tau_{tau}s.{format}\"\n        df = pl.scan_parquet(filepath)\n    elif method == 'fit':\n        format = 'arrow'\n        filepath = f\"{data_dir}/05_reporting/events.{name}.ts_{ts:.2f}s_tau_{tau}s.{format}\"\n        df = pl.read_ipc(filepath).lazy()\n    return df.drop_nulls().with_columns(\n        pl.col(parameters).abs(),\n        sat = pl.lit(name),\n        ts = pl.lit(f'{ts}s'),\n        method = pl.lit(method),\n        ts_method = pl.lit(f'{ts}s {method}'),\n        label = pl.lit(f'{name} {ts}s {method}')\n    ).collect()\n    # .with_columns(cs.numeric().cast(pl.Float64))\n    \nwind_df = load_events('Wind', 1, 60, 'fit')\nsta_df = load_events('STA', 1, 60, 'fit')\njno_df = load_events('JNO', 1, 60, 'fit')\n\nother_events = pl.concat([wind_df, sta_df], how='diagonal')\n\nlogger.info(f\"Columns: {other_events.columns}\")\n\n2024-02-16 17:56:54.802 | INFO     | __main__:&lt;module&gt;:26 - Columns: ['time', 'tstart', 'tstop', 'd_tstart', 'd_tstop', 'd_time', 'time_before', 'time_after', 'duration', 'count', 'B_std', 'B_mean', 'dB_vec', 'index_diff', 'index_std', 'index_fluctuation', 'B.after', 'B.before', 'b_mag', 'b_n', 'bn_over_b', 'd_star', 'db_mag', 'db_over_b', 'db_over_b_max', 'fit.stat.chisqr', 'fit.stat.rsquared', 'fit.vars.amplitude', 'fit.vars.c', 'fit.vars.sigma', 'rotation_angle', 'dB_x', 'dB_y', 'dB_z', 'dB_lmn_x', 'dB_lmn_y', 'dB_lmn_z', 'k_x', 'k_y', 'k_z', 'Vl_x', 'Vl_y', 'Vl_z', 'Vn_x', 'Vn_y', 'Vn_z', 'plasma_density', 'VX (GSM)', 'VY (GSM)', 'VZ (GSM)', 'SW Vth', 'plasma_speed', 'plasma_temperature', 'VX (GSM)_before', 'VY (GSM)_before', 'VZ (GSM)_before', 'n.before', 'v.ion.before', 'T.before', 'VX (GSM)_after', 'VY (GSM)_after', 'VZ (GSM)_after', 'n.after', 'v.ion.after', 'T.after', 'v_l', 'v_n', 'v_k', 'v_mn', 'L_k_fit', 'L_n', 'L_mn', 'L_k', 'j0_mn', 'j0_k', 'ion_inertial_length', 'Alfven_speed', 'j_Alfven', 'L_k_norm', 'L_k_fit_norm', 'L_n_norm', 'L_mn_norm', 'j0_mn_norm', 'j0_k_norm', 'v.ion.before.l', 'v.ion.after.l', 'B.vec.before.l', 'B.vec.before.m', 'B.vec.before.n', 'B.vec.after.l', 'B.vec.after.m', 'B.vec.after.n', 'v.Alfven.before', 'v.Alfven.after', 'v.Alfven.before.l', 'v.Alfven.after.l', 'n.change', 'v.ion.change', 'v.ion.change.l', 'T.change', 'B.change', 'v.Alfven.change', 'v.Alfven.change.l', 'sat', 'ts', 'method', 'ts_method', 'label', 'proton_number_density', 'proton_Vr_RTN', 'proton_Vt_RTN', 'proton_Vn_RTN', 'proton_Vr_RTN_before', 'proton_Vt_RTN_before', 'proton_Vn_RTN_before', 'proton_Vr_RTN_after', 'proton_Vt_RTN_after', 'proton_Vn_RTN_after']\n\n\nSome extreme values are present in the data. We will remove them.\n\nDISPLAY_VARS = ['time', 'sat'] + parameters\n\ndef check_candidates(df):\n    if isinstance(df, pl.LazyFrame):\n        df = df.collect()\n    logger.info(df.columns)\n    return df.select(DISPLAY_VARS).describe()\n\ncheck_candidates(jno_df)\n\n2024-02-16 17:56:54.816 | INFO     | __main__:check_candidates:6 - ['time', 'tstart', 'tstop', 'd_tstart', 'd_tstop', 'd_time', 'time_before', 'time_after', 'duration', 'count', 'B_std', 'B_mean', 'dB_vec', 'index_diff', 'index_std', 'index_fluctuation', 'B.after', 'B.before', 'b_mag', 'b_n', 'bn_over_b', 'd_star', 'db_mag', 'db_over_b', 'db_over_b_max', 'fit.stat.chisqr', 'fit.stat.rsquared', 'fit.vars.amplitude', 'fit.vars.c', 'fit.vars.sigma', 'rotation_angle', 'dB_x', 'dB_y', 'dB_z', 'dB_lmn_x', 'dB_lmn_y', 'dB_lmn_z', 'k_x', 'k_y', 'k_z', 'Vl_x', 'Vl_y', 'Vl_z', 'Vn_x', 'Vn_y', 'Vn_z', 'radial_distance', 'plasma_density', 'plasma_temperature', 'model_b_r', 'model_b_t', 'model_b_n', 'v_x', 'v_y', 'v_z', 'plasma_speed', 'B_background_x', 'B_background_y', 'B_background_z', 'v_x_before', 'v_y_before', 'v_z_before', 'n.before', 'v.ion.before', 'T.before', 'v_x_after', 'v_y_after', 'v_z_after', 'n.after', 'v.ion.after', 'T.after', 'v_l', 'v_n', 'v_k', 'v_mn', 'L_k_fit', 'L_n', 'L_mn', 'L_k', 'j0_mn', 'j0_k', 'ion_inertial_length', 'Alfven_speed', 'j_Alfven', 'L_k_norm', 'L_k_fit_norm', 'L_n_norm', 'L_mn_norm', 'j0_mn_norm', 'j0_k_norm', 'v.ion.before.l', 'v.ion.after.l', 'B.vec.before.l', 'B.vec.before.m', 'B.vec.before.n', 'B.vec.after.l', 'B.vec.after.m', 'B.vec.after.n', 'v.Alfven.before', 'v.Alfven.after', 'v.Alfven.before.l', 'v.Alfven.after.l', 'n.change', 'v.ion.change', 'v.ion.change.l', 'T.change', 'B.change', 'v.Alfven.change', 'v.Alfven.change.l', 'sat', 'ts', 'method', 'ts_method', 'label']\n\n\n\nshape: (9, 9)\n\n\n\nstatistic\ntime\nsat\nj0_k\nj0_k_norm\nL_k_fit\nL_k\nL_k_fit_norm\nL_k_norm\n\n\nstr\nstr\nstr\nf64\nf64\nf64\nf64\nf64\nf64\n\n\n\n\n\"count\"\n\"63143\"\n\"63143\"\n63143.0\n63143.0\n63143.0\n63143.0\n63143.0\n63143.0\n\n\n\"null_count\"\n\"0\"\n\"0\"\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n\n\n\"mean\"\n\"2013-05-14 11:…\nnull\n82.27062\n4.421198\n13584.588436\n9410.339035\n66.485861\n45.121054\n\n\n\"std\"\nnull\nnull\n14379.63164\n502.18201\n71124.942703\n5438.269571\n378.126838\n34.72957\n\n\n\"min\"\n\"2011-08-25 16:…\n\"JNO\"\n0.000044\n0.000002\n0.000145\n1.187819\n0.000001\n0.001187\n\n\n\"25%\"\n\"2012-03-08 20:…\nnull\n0.141089\n0.021349\n684.287668\n5123.132655\n2.892811\n20.526554\n\n\n\"50%\"\n\"2013-03-05 15:…\nnull\n0.326004\n0.051113\n1486.867028\n8643.437318\n6.428969\n36.506577\n\n\n\"75%\"\n\"2014-03-11 18:…\nnull\n0.810645\n0.11534\n3614.292659\n12991.083881\n16.255481\n59.95483\n\n\n\"max\"\n\"2016-06-29 23:…\n\"JNO\"\n3.5708e6\n93596.16631\n2.5404e6\n42775.89897\n10409.01271\n382.018872\n\n\n\n\n\n\n\ndef remove_extreme(df, cols = ['j0_k', 'L_k_fit'], q = 0.96):\n    filter_conditions = [\n        pl.col(col) &lt; pl.col(col).quantile(q) for col in cols\n    ] + [\n        pl.col(col) &gt; pl.col(col).quantile(1-q) for col in cols\n    ]\n    \n    return df.filter(filter_conditions)\n\njno_df = remove_extreme(jno_df)\nother_events = remove_extreme(other_events)\n\n\n%R -i jno_df -c conv_pl\n%R -i other_events -c conv_pl\n\n\n%%R\np1title &lt;- \"a) Juno\"\np2title &lt;- \"b) ARTEMIS, STEREO and Wind\"\nx_lab_r &lt;- \"Radial Distance (AU)\"\nx_lab_t &lt;- \"Time\"\n\ny_lab_t &lt;- \"Log Time Duration (s)\"\ny_lab_L &lt;- \"Log Thickness (km)\"\ny_lab_L_norm &lt;- expression(Log~Thickness~(d[i]))\n\n\n%%R -w 350 -h 350 -u mm\nadd_mode &lt;- FALSE\ny_bins &lt;- 16\nlog_y &lt;- FALSE\ny_lim_duration &lt;- c(0.1, 30)\n\ny_col &lt;- \"duration\"\nylab &lt;- y_lab_t\n\nx_col &lt;- \"radial_distance\"\n\np &lt;- plot_binned_data(jno_df, x_col = x_col, y_col = y_col, x_bins = 8, y_bins = y_bins, y_lim = y_lim_duration, log_y = log_y, add_mode=add_mode)\np1 &lt;- p + labs(x = NULL, y= ylab) + ggtitle(p1title)\n\n\nx_col &lt;- \"time\"\np &lt;- plot_binned_data(other_events, x_col = x_col, y_col = y_col, x_bins = 8, y_bins = y_bins, y_lim = y_lim_duration, log_y = log_y, add_mode=add_mode)\np2 &lt;- p + labs(x = NULL, y= ylab) + ggtitle(p2title)\n\np &lt;- (p1 + p2) + plot_layout(ncol = 1, guides = \"collect\") & scale_fill_viridis_c(limits = c(0.01, 0.20), name=\"pdf\")\n# save_plot(\"new/duration/duration_dist\")\np\n\nScale for fill is already present.\nAdding another scale for fill, which will replace the existing scale.\nScale for fill is already present.\nAdding another scale for fill, which will replace the existing scale.\n\n\n\n\n\n\n\n\n\n\n%%R -w 350 -h 350 -u mm\nlayout &lt;- plot_layout(ncol = 2, byrow = FALSE, guides = \"collect\")\n\nadd_mode &lt;- FALSE\ny_bins &lt;- 24\ny_lim_j0 &lt;- c(0.03, 20)\n\nx_col &lt;- \"radial_distance\"\n\ny_col &lt;- \"j0_k\"\nylab &lt;- expression(Log~J~(nA~m^-2))\n\n# y_lim_j0 &lt;- NULL\np &lt;- plot_binned_data(jno_df, x_col = x_col, y_col = y_col, x_bins = 8, y_bins = y_bins, y_lim = y_lim_j0, log_y = TRUE, add_mode=add_mode)\np1 &lt;- p + labs(x = NULL, y= ylab) + ggtitle(p1title)\n# save_plot(\"new/current/current_k_r_dist\")\n\n\ny_col &lt;- \"j0_k_norm\"\ny_lim_j0_norm &lt;- c(0.002, 1)\nylab &lt;- expression(Log~Normalized~J~(J[A]))\np &lt;- plot_binned_data(jno_df, x_col = x_col, y_col = y_col, x_bins = 8, y_bins = y_bins, y_lim = y_lim_j0_norm, log_y = TRUE, add_mode=add_mode)\np2 &lt;- p + labs(x = x_lab_r, y= ylab)\n\n\nx_col &lt;- \"time\"\n\ny_col &lt;- \"j0_k\"\np &lt;- plot_binned_data(other_events, x_col = x_col, y_col = y_col, x_bins = 8, y_bins = y_bins, y_lim = y_lim_j0, log_y = TRUE, add_mode=add_mode)\np3 &lt;- p + labs(x = NULL, y= NULL) + ggtitle(p2title)\n\n\ny_col &lt;- \"j0_k_norm\"\np &lt;- plot_binned_data(other_events, x_col = x_col, y_col = y_col, x_bins = 8, y_bins = y_bins, y_lim = y_lim_j0_norm, log_y = TRUE, add_mode=add_mode)\np4 &lt;- p + labs(x = x_lab_t, y= NULL)\n\n(p1 + p2 + p3 + p4) + layout & scale_fill_viridis_c(limits = c(0.01, 0.13), trans = \"log10\", name=\"pdf\")\nsave_plot(\"new/current/current_k_dist\")\n\nScale for fill is already present.\nAdding another scale for fill, which will replace the existing scale.\nScale for fill is already present.\nAdding another scale for fill, which will replace the existing scale.\nScale for fill is already present.\nAdding another scale for fill, which will replace the existing scale.\nScale for fill is already present.\nAdding another scale for fill, which will replace the existing scale.\nSaving 13.8 x 13.8 in image\nSaving 13.8 x 13.8 in image\n\n\n\n%%R -w 350 -h 350 -u mm\nx_col &lt;- \"radial_distance\"\ny_bins &lt;- 16\nadd_mode &lt;- FALSE\n\ny_lim_L &lt;- c(100, 40000)\ny_lim_L_norm &lt;- c(0.2, 200)\n# y_lim_L &lt;- NULL\n\n## Panel 01\ny_col &lt;- \"L_k_fit\"\n\ny_lim &lt;- y_lim_L\nylab &lt;- y_lab_L\np &lt;- plot_binned_data(jno_df, x_col = x_col, y_col = y_col, x_bins = 8, y_bins = y_bins, y_lim = y_lim, log_y = TRUE, add_mode=add_mode)\np1 &lt;- p + labs(x = NULL, y= ylab) + ggtitle(p1title)\n\n## Panel 02\ny_col &lt;- \"L_k_fit_norm\"\n\n\ny_lim &lt;- y_lim_L_norm\nylab &lt;- y_lab_L_norm\np &lt;- plot_binned_data(jno_df, x_col = x_col, y_col = y_col, x_bins = 8, y_bins = y_bins, y_lim = y_lim, log_y = TRUE, add_mode=add_mode)\np2 &lt;- p + labs(x = x_lab_r, y= ylab)\n\n## Panel 03\nx_col &lt;- \"time\"\ny_col &lt;- \"L_k_fit\"\ny_lim &lt;- y_lim_L\np &lt;- plot_binned_data(other_events, x_col = x_col, y_col = y_col, x_bins = 8, y_bins = y_bins, y_lim = y_lim, log_y = TRUE, add_mode=add_mode)\np3 &lt;- p + labs(x = NULL, y= NULL) + ggtitle(p2title)\n\n## Panel 04\ny_col &lt;- \"L_k_fit_norm\"\ny_lim &lt;- y_lim_L_norm\np &lt;- plot_binned_data(other_events, x_col = x_col, y_col = y_col, x_bins = 8, y_bins = y_bins, y_lim = y_lim, log_y = TRUE, add_mode=add_mode)\np4 &lt;- p + labs(x = x_lab_t, y= NULL)\n\n(p1 + p2 + p3 + p4) + layout & scale_fill_viridis_c(limits = c(0.01, 0.18), trans = \"log10\", name=\"pdf\")\nsave_plot(\"new/thickness/thickness_k_fit_dist\")\n\nScale for fill is already present.\nAdding another scale for fill, which will replace the existing scale.\nScale for fill is already present.\nAdding another scale for fill, which will replace the existing scale.\nScale for fill is already present.\nAdding another scale for fill, which will replace the existing scale.\nScale for fill is already present.\nAdding another scale for fill, which will replace the existing scale.\nSaving 13.8 x 13.8 in image\nSaving 13.8 x 13.8 in image\n\n\n\n%%R\nx_col &lt;- \"radial_distance\"\nxlab &lt;- \"Radial Distance (AU)\"\n\ny_col &lt;- \"L_k_fit\"\nylab &lt;- \"Log Thickness (km)\"\ny_lim &lt;- c(100, 40000)\n# y_lim &lt;- NULL\np &lt;- plot_binned_data(jno_df, x_col = x_col, y_col = y_col, x_bins = 8, y_bins = 32, y_lim = y_lim, log_y = TRUE)\np &lt;- p + labs(x = xlab, y= ylab)\n# save_plot(\"new/thickness/thickness_k_fit_r_dist\")\n\ny_col &lt;- \"L_k_fit_norm\"\ny_lim &lt;- c(0.2, 100)\n# y_lim &lt;- NULL\nylab &lt;- expression(Log~Thickness~(d[i]))\np &lt;- plot_binned_data(jno_df, x_col = x_col, y_col = y_col, x_bins = 8, y_bins = 32, y_lim = y_lim, log_y = TRUE)\np &lt;- p + labs(x = xlab, y= ylab)\nsave_plot(\"new/thickness/thickness_k_fit_N1_r_dist\")\np\n\nSaving 6.67 x 6.67 in image\nSaving 6.67 x 6.67 in image",
    "crumbs": [
      "Home",
      "Notebooks",
      "SWD Properties"
    ]
  },
  {
    "objectID": "notes.html",
    "href": "notes.html",
    "title": "Notes",
    "section": "",
    "text": "image.png\n\n\n\nNormalization of the daily rates to 400 km/s ?",
    "crumbs": [
      "Home",
      "Notes"
    ]
  },
  {
    "objectID": "notes.html#solar-wind-model",
    "href": "notes.html#solar-wind-model",
    "title": "Notes",
    "section": "Solar Wind Model",
    "text": "Solar Wind Model\nSadly, JUNO does not provide plasma data during the cruise phase, so to estimate the plasma state we will use MHD model.\nWe are using Michigan Solar WInd Model 2D (MSWIM2D), which models the solar wind propagation in 2D using the BATSRUS MHD solver. Keebler et al. (2022)\nSome key points about the model\n\nRepresenting the solar wind in the ecliptic plane from 1 to 75 AU\n2D MHD model, using the BATSRUS MHD solver\nInclusion of neutral hydrogen (important for the outer heliosphere)\nInner boundary is filled by time-shifting in situ data from multiple spacecraft\n\nFor model validation part, please see JUNO Model Report.",
    "crumbs": [
      "Home",
      "Notes"
    ]
  },
  {
    "objectID": "notes.html#section",
    "href": "notes.html#section",
    "title": "Notes",
    "section": "",
    "text": "image.png\n\n\n\nNormalization of the daily rates to 400 km/s ?",
    "crumbs": [
      "Home",
      "Notes"
    ]
  },
  {
    "objectID": "notebooks/missions/juno/mag.html",
    "href": "notebooks/missions/juno/mag.html",
    "title": "JUNO Magnetic field data pipeline",
    "section": "",
    "text": "JUNO Magnetic field data can be downloaded from PDS website.\nfrom datetime import datetime\n\nimport polars as pl\nimport pandas as pd\n\nfrom discontinuitypy import ROOT_DIR\nfrom discontinuitypy.utils.pds import pds_download\nfrom discontinuitypy.utils.lbl import load_lbl\nfrom discontinuitypy.utils.basic import partition_data_by_year\nfrom discontinuitypy.utils.polars import create_partitions\nfrom discontinuitypy.pipelines.default.data_mag import create_pipeline_template\n\n\nfrom pipe import select, filter\n\nfrom typing import Literal\n\n[11/29/23 21:10:53] WARNING  TqdmExperimentalWarning: Using `tqdm.autonotebook.tqdm` in notebook    warnings.py:109\n                             mode. Use `tqdm.tqdm` instead to force console mode (e.g. in jupyter                  \n                             console)\n%load_ext autoreload\n%autoreload 2",
    "crumbs": [
      "Home",
      "Notebooks",
      "Missions",
      "IDs from Juno",
      "JUNO Magnetic field data pipeline"
    ]
  },
  {
    "objectID": "notebooks/missions/juno/mag.html#downloading-data",
    "href": "notebooks/missions/juno/mag.html#downloading-data",
    "title": "JUNO Magnetic field data pipeline",
    "section": "Downloading data",
    "text": "Downloading data\n\nJunoPhases = Literal[\"CRUISE\", \"JUPITER\"]\nJunoFGMCoords = Literal['SE', 'SS', 'PL']\nJunoFGMTimeResolutions = Literal[\"1SEC\", \"1MIN\"]\n\n\ndef download_data(\n    start=None,\n    end=None,\n    phase: JunoPhases = \"CRUISE\",\n    coord: JunoFGMCoords = \"SE\",\n    datatype: JunoFGMTimeResolutions = \"1SEC\",  # time resolution\n) -&gt; list[str]:\n    files = pds_download(\n        mission=\"Juno\",\n        instrument=\"FGM\",\n        dataset=phase,\n        coord=coord,\n        datatype=datatype,\n        path=ROOT_DIR / \"data/01_raw/\",\n    )\n\n    return list(files | filter(lambda x: x.endswith(\".lbl\")))\n\n\ndef _load_func(file):\n    df = pl.from_dataframe(load_lbl(file))\n    return (\n        df.lazy()\n        .with_columns(time=pl.col(\"SAMPLE UTC\").str.to_datetime(\"%Y %j %H %M %S %f\"))\n        .drop([\"SAMPLE UTC\", \"DECIMAL DAY\", \"INSTRUMENT RANGE\", \"X\", \"Y\", \"Z\"])\n        .sort(\"time\")\n    )\n\ndef parse_fp(fp):\n    fn = fp.split('/')[-1]\n    dt_str = fn.split('_')[3][0:7]\n    format = \"%Y%j\"\n    return datetime.strptime(dt_str, format)\n\n\ndef load_data(\n    start,\n    end,\n    datatype: str = \"1SEC\",  # time resolution\n) -&gt; pl.DataFrame:\n    start = pd.Timestamp(start)\n    end = pd.Timestamp(end)\n    files = download_data(start, end, datatype=datatype)\n    files_dict = {\n        file: parse_fp(file) for file in files\n    }\n    files = [k for k, v in files_dict.items() if start &lt;= v &lt; end]\n    return pl.concat(files | select(_load_func))",
    "crumbs": [
      "Home",
      "Notebooks",
      "Missions",
      "IDs from Juno",
      "JUNO Magnetic field data pipeline"
    ]
  },
  {
    "objectID": "notebooks/missions/juno/mag.html#preprocessing-data",
    "href": "notebooks/missions/juno/mag.html#preprocessing-data",
    "title": "JUNO Magnetic field data pipeline",
    "section": "Preprocessing data",
    "text": "Preprocessing data\nConvert all files from lbl format to parquet format for faster processing\n::: {#cell-9 .cell 0=‘e’ 1=‘x’ 2=‘p’ 3=‘o’ 4=‘r’ 5=‘t’ execution_count=8}\ndef preprocess_data(raw_data: pl.DataFrame) -&gt; pl.DataFrame:\n    \"\"\"\n    Preprocess the raw dataset (only minor transformations)\n\n    - Applying naming conventions for columns\n    - Parsing and typing data\n    - Changing storing format (from `lbl` to `parquet`)\n    - Dropping useless columns\n    \"\"\"\n    return create_partitions(raw_data, _load_func)\n:::",
    "crumbs": [
      "Home",
      "Notebooks",
      "Missions",
      "IDs from Juno",
      "JUNO Magnetic field data pipeline"
    ]
  },
  {
    "objectID": "notebooks/missions/juno/mag.html#processing-data",
    "href": "notebooks/missions/juno/mag.html#processing-data",
    "title": "JUNO Magnetic field data pipeline",
    "section": "Processing data",
    "text": "Processing data\n::: {#cell-11 .cell 0=‘e’ 1=‘x’ 2=‘p’ 3=‘o’ 4=‘r’ 5=‘t’ execution_count=9}\ndef process_data(\n    raw_data: pl.DataFrame,\n    ts: str = None,  # time resolution\n) -&gt; pl.DataFrame | dict[str, pl.DataFrame]:\n    \"\"\"\n    Partitioning data, for the sake of memory\n    \"\"\"\n    data: pl.LazyFrame = pl.concat(func() for func in raw_data.values())\n    return (\n        data.with_columns(pl.col(\"time\").dt.cast_time_unit(\"us\"))  # issue: https://github.com/pola-rs/polars/issues/12023\n        .unique(\"time\")\n        .sort(\"time\")\n        .pipe(partition_data_by_year)\n    )\n:::",
    "crumbs": [
      "Home",
      "Notebooks",
      "Missions",
      "IDs from Juno",
      "JUNO Magnetic field data pipeline"
    ]
  },
  {
    "objectID": "notebooks/missions/juno/mag.html#pipeline",
    "href": "notebooks/missions/juno/mag.html#pipeline",
    "title": "JUNO Magnetic field data pipeline",
    "section": "Pipeline",
    "text": "Pipeline\n::: {#cell-13 .cell 0=‘e’ 1=‘x’ 2=‘p’ 3=‘o’ 4=‘r’ 5=‘t’}\ndef create_pipeline(sat_id=\"JNO\", source=\"MAG\"):\n    return create_pipeline_template(\n        sat_id=sat_id,\n        source=source,\n        load_data_fn=download_data,\n        preprocess_data_fn=preprocess_data,\n        process_data_fn=process_data,\n    )\n:::",
    "crumbs": [
      "Home",
      "Notebooks",
      "Missions",
      "IDs from Juno",
      "JUNO Magnetic field data pipeline"
    ]
  }
]